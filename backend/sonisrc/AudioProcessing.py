import numpy as np
import matplotlib.pyplot as plt
import scipy.io.wavfile as wavfile
import IPython.display as ipd
import scipy.io.wavfile as wavfile

def plot_fourier_mag(x,fs,res_string):
    """
    Given audio samples and the sample rate, plot
    the magnitude of the Fourier transform of x with 
    the appropriate frequency labels
    Parameters
    ----------
    x: ndarray(N)
        The audio samples
    fs: int
        The sample rate in hz
    """
    xft = np.abs(np.fft.fft(x))
    freqs = np.fft.fftfreq(len(x), 1/fs)
    plt.plot(freqs, np.abs(xft))
    plt.xlabel("Frequency")
    plt.ylabel("Magnitude")
    plt.savefig("sonisrc/imgfigres/fouriermag" + res_string + ".png")

def load_audio_mono(filename):
    """
    Load audio from a .wav file, mixing stereo 
    to mono if necessary
    Parameters
    ----------
    filename: string
        Path to file
    
    Returns
    -------
    fs: int
        Sample rate
    x: ndarray(N)
        Mono audio
    """
    fs, x = wavfile.read(filename)
    if len(x.shape) > 1:
        x = np.mean(x, 1)
    return fs, x

"""
//////////////////////////////////////////////////////////////
Comb Filters
//////////////////////////////////////////////////////////////
"""

def get_comb_sound(fs, note, duration, n_pulses, n_samples, fmag_range):

    freq = 440 * (2 **(note/12)) #frequency
    t = int(fs/freq) #period
    y = np.random.randn(fs*duration)
    h = np.zeros(t*n_pulses)
    h[0::t] = 1  ## Impulse response
    x = np.convolve(y, h)

    res_string = "Combsound" + str(fs) + str(note) + str(duration) + str(n_pulses) + str(n_samples) + str(fmag_range)

    plt.subplot(2, 1, 1)
    plt.plot(x[0:n_samples])
    plt.subplot(2, 1, 2)
    plot_fourier_mag(x, fs, res_string)
    plt.xlim([0, fmag_range])
    plt.savefig("sonisrc/imgfigres/" + res_string + ".png")
    wavfile.write("sonisrc/audiores/" + res_string+".wav", fs, x)
    
    return res_string


"""
//////////////////////////////////////////////////////////////
Square Waves
//////////////////////////////////////////////////////////////
"""

def make_sine_wave(fs, note, duration):
    freq = 440 * 2(2 **(note/12))
    t = np.linspace(0, duration, duration*fs)
    y = np.sin(np.pi*freq*t);
    res_string = "Sine Wave" + str(fs) + str(note) + str(duration)
    wavfile.write("sonisrc/imgfigres/" + res_string + ".wav", fs, y)
    return res_string

def get_square_wave(fs,note,duration):
    freq = 440 * 2(2 **(note/12))
    t = np.linspace(0, duration, duration * fs)
    y = np.sin(2*np.pi*freq*t)
    z = np.sign(y)

    plt.subplot(2,1,1)
    plt.plot(t, y)
    plt.xlim([0, 0.01])
    plt.xlabel("Seconds")
    plt.subplot(2,1,2)
    plt.plot(t,z)
    plt.xlim([0,0.01])
    plt.xlabel("Seconds")

    res_string = "Square Wave" + str(fs) + str(note) + str(duration)
    plt.savefig("sonisrc/imgfigres/" + res_string + ".png")
    wavfile.write("sonisrc/imgfigres/" + res_string + ".wav", fs, z)

    return res_string

# """
# //////////////////////////////////////////////////////////////
# Music Statement
# //////////////////////////////////////////////////////////////
# """

def get_convolved_audio(fs, song_one, song_two):
    fs, x = load_audio_mono(song_one)
    fs, h = load_audio_mono(song_two)
    y = fftconvolve(x,h)
    y /= np.max(np.abs(y))
    res_string = "Convolve Two Sample" + str(fs) + song_one + song_two
    wavfile.write("sonisrc/imgfigres/" + res_string + ".wav", fs, y)

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """

# """
# //////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////
# """
    
